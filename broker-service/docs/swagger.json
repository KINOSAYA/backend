{
    "swagger": "2.0",
    "info": {
        "title": "kinosaya API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "Returns a JSON response with success status.",
                "produces": [
                    "application/json"
                ],
                "summary": "hit the broker",
                "operationId": "get-sample-response",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.jsonResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Logs in a user with the given data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logs a user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "registrationPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.registrationPayload"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful registration",
                        "schema": {
                            "$ref": "#/definitions/handlers.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/handlers.jsonResponse"
                        }
                    }
                }
            }
        },
        "/auth/parse-token": {
            "post": {
                "description": "token validation (token is alive for 24 hours",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "token parser",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "registrationPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.tempTokenReqPayload"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful registration",
                        "schema": {
                            "$ref": "#/definitions/handlers.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/handlers.jsonResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Refreshes an access token using a refresh token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh Access Token",
                "operationId": "refreshAccessToken",
                "parameters": [
                    {
                        "description": "Refresh token structure",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.token"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Token refresh successful",
                        "schema": {
                            "$ref": "#/definitions/handlers.jsonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/handlers.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.jsonResponse"
                        }
                    }
                }
            }
        },
        "/auth/registration": {
            "post": {
                "description": "Registers a new user with the specified data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "registrationPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.registrationPayload"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful registration",
                        "schema": {
                            "$ref": "#/definitions/handlers.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/handlers.jsonResponse"
                        }
                    }
                }
            }
        },
        "/kinopoisk/films": {
            "get": {
                "description": "Retrieve films based on the provided slug.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Kinopoisk"
                ],
                "summary": "Get Films by Slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The slug of the film",
                        "name": "slug",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/kinopoisk/slugs": {
            "get": {
                "description": "This endpoint communicates with the Kinopoisk API to fetch JSON data containing information about slugs by chosen category.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Kinopoisk"
                ],
                "summary": "Get Collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page of results",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit records for one page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category e.g. ('Фильмы', 'Сериалы')",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/handlers.jsonResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.jsonResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handlers.registrationPayload": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handlers.tempTokenReqPayload": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "handlers.token": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        }
    }
}