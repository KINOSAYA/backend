version: '3'

services:
  broker-service:
    build:
      context: ./broker-service
      dockerfile: ./broker-service.dockerfile
    restart: always
    ports:
      - "8080:8080"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      authGrpcPort: "50001"
      authHost: "authentication-service"
      webPort: "8080"

  authentication-service:
    build:
      context: ./authentication-service
      dockerfile: ./authentication-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
      port: "8081"
      gRpcPort: "50001"
      dbURL: "postgres://postgres:password@postgres:5432/users?sslmode=disable"
      migrationPath: "file:///app"

  external-api-service:
    build:
      context: ./external-api-service
      dockerfile: ./external-api-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      Bearer to TMDB: eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyZjQzNDM3YzUxYWZjZjIzOTllNGJhN2FlZDAxNDNkZSIsInN1YiI6IjY1NWYzNjQwNzA2ZTU2MDBlMTUxYjNkYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.IVhcwx0YwpKHlwhe0u9ppa9PE-Z0b5wQW2gohNP0n1Q



  postgres:
    image: 'postgres:14.2-alpine'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/


  rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq
